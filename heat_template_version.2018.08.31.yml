heat_template_version: "2018-08-31"
description: "create template to automation project configuration and start services automatically"

parameters:
  image_id:
    type: string
    description: base image name
    default: "Ubuntu-20.04"
  app-flavor-name:
    type: string
    description: flavor name or id for apps
    default: "Custom_falvor1"
  db-flavor-name:
    type: string
    description: flavor name or id for mongodb
    default: "Custom_falvor2"

resources:
  network:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      name: auth-app
  network_subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: network }
      cidr: "192.168.65.0/26"
      dns_nameservers: ["8.8.8.8"]
      gateway_ip: "192.168.65.1"
      ip_version: 4
  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: public }
      name: cloud-app
  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: network_subnet }
              
        
  security_group_mongodb:
    type: OS::Neutron::SecurityGroup
    properties:
      description: 'related to mongodb,for port 27017,SSH,HTTP'
      name: security-group-mongodb
      rules:
      - direction: egress
        ethertype: IPv4
        remote_ip_prefix: 0.0.0.0/0
      - direction: ingress
        protocol: icmp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 27017
        port_range_min: 27017
        protocol: tcp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 22
        port_range_min: 22
        protocol: tcp
         
  security_group_app:
    type: OS::Neutron::SecurityGroup
    properties:
      description: 'for ICMP,HTTP,SSH'
      name: security-group-app
      rules:
      - direction: egress
        ethertype: IPv4
        remote_ip_prefix: 0.0.0.0/0
      - direction: ingress
        protocol: icmp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 80
        port_range_min: 80
        protocol: tcp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 22
        port_range_min: 22
        protocol: tcp  
              
 
  port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      security_groups: [{ get_resource: security_group_app }]
      fixed_ips:
        - ip_address: "192.168.65.34"
  port2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      security_groups: [{ get_resource: security_group_app }]
      fixed_ips:
        - ip_address: "192.168.65.35"
        
  port3:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: security_group_mongodb }]
      network_id: { get_resource: network }
      fixed_ips:
        - ip_address: "192.168.65.36"    
        
  instance_mongo:
    type: OS::Nova::Server
    properties:
      name: instance-mongoDB
      image: { get_param: image_id }
      flavor: { get_param: db-flavor-name }
      networks:
        - port: { get_resource: port3 }
       
  
  instance1:
    type: OS::Nova::Server
    properties:
      name: instance1
      image: { get_param: image_id }
      flavor: { get_param: app-flavor-name }
      networks:
        - port: { get_resource: port1}   
        
  instance2:
    type: OS::Nova::Server
    properties:
      name: instance2
      image: { get_param: image_id }
      flavor: { get_param: app-flavor-name }
      networks:
        - port: { get_resource: port2}        
        
        
  lb_port:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: security_group_app }]
      network_id: { get_resource: network }
      fixed_ips:
        - subnet_id: { get_resource: network_subnet }     
        
  floating_ip_lb:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public
      port_id: { get_resource: lb_port }    
      
  pool_lb:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_lb }
      port_id: { get_resource: lb_port }      
        
  LBaaS:
    type: OS::Octavia::LoadBalancer
    properties:
      name: "load-balancer"
      vip_subnet: { get_resource: network_subnet }        

  pool:
    type: OS::Octavia::Pool
    properties:
      admin_state_up: true
      lb_algorithm: ROUND_ROBIN
      loadbalancer: { get_resource: LBaaS }
      name: "lb_pool"
      protocol: HTTP        
        
  monitor:
    type: OS::Octavia::HealthMonitor
    properties:
      pool: { get_resource: pool }
      type: PING
      delay: 15
      max_retries: 20
      timeout: 20







        
        
